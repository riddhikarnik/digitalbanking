<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
         http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<tx:annotation-driven />
	<context:annotation-config />

	<context:component-scan
		base-package="com.banking.**" />

	<context:property-placeholder
		location="classpath:/db/project.properties"
		system-properties-mode="OVERRIDE" />

	<jpa:repositories
		base-package="com.banking.entity.repository.**"></jpa:repositories>

	<jdbc:initialize-database
		data-source="dataSource" enabled="${database.enabled}">
		<!-- Initialize DB via script -->
		<jdbc:script encoding="utf-8"
			location="classpath:/db/MySQL/DDL.sql" />
		<jdbc:script encoding="utf-8"
			location="classpath:/db/MySQL/DML.sql" />
	</jdbc:initialize-database>

	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="1" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource" p:packagesToScan="com.banking.entity.**">

		<property name="jpaPropertyMap">
			<map>
				<entry key="#{T(org.hibernate.cfg.AvailableSettings).DIALECT}"
					value="${hibernate.dialect}" />
				<entry
					key="#{T(org.hibernate.cfg.AvailableSettings).FORMAT_SQL}"
					value="${hibernate.format_sql}" />
				<entry
					key="#{T(org.hibernate.cfg.AvailableSettings).USE_SQL_COMMENTS}"
					value="${hibernate.use_sql_comments}" />
				<entry
					key="#{T(org.hibernate.cfg.AvailableSettings).CACHE_REGION_FACTORY}"
					value="org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory" />
				<entry
					key="#{T(org.hibernate.cfg.AvailableSettings).USE_SECOND_LEVEL_CACHE}"
					value="true" />
				<entry
					key="#{T(org.hibernate.cfg.AvailableSettings).USE_QUERY_CACHE}"
					value="false" />
				<entry
					key="#{T(org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory).NET_SF_EHCACHE_CONFIGURATION_RESOURCE_NAME}"
					value="cache/ehcache.xml" />

			</map>
		</property>

		<property name="jpaVendorAdapter">
			<bean
				class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
				p:showSql="${jpa.showSql}">
			</bean>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory"
			ref="entityManagerFactory" />
	</bean>
</beans>